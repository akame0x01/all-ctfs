### Notes bout jr pentester path

Roles in cyber security can look almost the same but they have little differences, and in a pentester job you will have a ROE(Rules of engagement). ROE is a form document that will define the permission,test scope and rules of a penetration test.

now below it will have some general themes of methodologies that you probably will follow in a pentester job 
1. Information Gathering.
2. Enumeration.
3. Exploitation.
4. Privilege Escalation.
5. Post Exploitation.
- you already exploited the enterprise or whatever it be, but in this stage you will searching for more things that you can compromise or some additional data you can get.
- after all you need to report all and etc.

OSSTMM(The Open Source Security Testing Methodology Manual) is a methodology that covers more about wired connections, wirelles and telecommunications, that means is more to network and physical stuff.
Some features about this methodology is:
- covers a lot of testing strategies.
- can be very detailed,a little difficult to understand and tend to be quite unique.
- as i said before, tend to focuses more in specific targets such Telecommunications, Wired connections and Wireless connections.
To start making an OSSTMM test you will need to track what you test (the targets), how you test them (the
parts of the targets tested and not the tools or techniques used), the types of controls discovered, and
what you did not test (targets and parts of the targets). And it's apllied to another methodologies too! 

OWASP(The Open Web Application Security Project methodology) is the most famous methodology and it covers the ten most reported vulnerabilities in web applications and web servers.
(good question is if have a methodology to software and binaries :)
some features about this methodology is:
- easy to understand.
- frequently updated.
- covers all states of engagements.
- web applications and web services.

The NIST Cyber Security Framework, what i've understand is this framework is the most used and covers more about general stuff, may i need to look at this framework again
features:
- frequently updated.
- use a lot of other frameworks so its a quite difficult to understand.
- dont cover cloud security which is getting more popular.
- weak auditing policies which makes the life of blue time and response of incidents roles a quite difficult.
- NIST provides accreditation. 
there is CAF(Cyber Security Framework) is a new framework with fourteen principles and is made for enterprises that perform "vitally important services and activities"

CIA TRIAD is about some pilars from security.
confidentiality - the protection to data from unauthorized access.
integrity - the data can be altered, hash and certified help with this.
availability - the service needs to be available the most part of time, an ddos attack break the availability pilar.
PIM and PAM is one of that security principles to and a methodology of privileges in applications and it depends on the situation and circumstances to choose which one you will use. The main difference between PIM(Privilege Identity Management) and PAM(Privilege Access Management) is that PIM addresses what access a user is already granted, while PAM addresses how to monitor and control access whenever a user requests access to a resource.

doing some practices stuff right now so...
did you know that was possible to find subdomains searching TTL/SSL certifies?

Virtual Hosts to discover subdomains, another way to discover subdomains. Some subdomains are not visible and public acessible such as development versions of web applications or administration portals, so the dns record needs to be kept on a private dns server or in developer's machines in /etc/hosts or c:\windows\system32\drivers\etc\hosts. To "bypass" it you can especify some names or brute force the HOST header when you make a request in a website and see if there is an response. Let me give a example using fuff to bruteforce the DNS.

ffuf -v -c -w /usr/share/wordlists/Seclists/Discovery/DNS/namelist.txt -H "Host: FUZZ.acmeitsupport.thm" -u http://10.10.125.79
-v flag means verbose output and -c means colored output
run that command and you will see that every attempt is a valid response, so you will filter with the size that comes with the response using -fs {size}.

xss using the mime sniffing, mime sniffing is the browser look at the Content-Type header in the http response for and indication of how the response should be interpreted, but browsers also have some algorithms to figure out what is the type of the content and change the Content-Type if the webserver give permission too.

Content-Type header is a important header that can lead a some vulnerabilities like Cross-Site-Script. MIME stands for Multipurpose Internet Mail Extension, Content-Type header fields include a MIME type of an  http response, to tell the browser what kind of data is present in http response. MIME Sniffing is a technique used by browsers to determine the content type of an http response using the magic bytes present in response. So if the response comes with html to render the page, the response needs to be with text/html in Content-Type header.
Now talking about vulnerabilities, if a unknown or MIME sniffing is allowed, MIME sniffing will take action to try to understand what type of content is it and if the content resembles HTML, browser might understand it as html even if the content-type is not set to text/html and make it executable, maybe elevate it to a lfi but i need to study more about xss and this mime sniffing vulnerability. good source https://infosecwriteups.com/content-security-policy-bypass-to-perform-xss-3c8dd0d40c2e ;;; cool bypass of CSP using mime sniffing !!

$ ffuf -c -v -w /usr/share/wordlists/Seclists/Usernames/Names/names.txt -X POST -d "username=FUZZ&email=x&password=x&cpassword=x" -H "Content-Type: application/x-www-form-urlencoded" -u http://10.10.167.0/customers/signup -mr "username already exists"
that is the syntax to brute force a login using ffuf, quite beautiful output than hydra ngl.

you can use variables and more than one wordlists in yours bruteforce using the -w flag, look

$ ffuf -c -v -w usernames.txt:W1,/usr/share/wordlists/Seclists/Passwords/Common-Credentials/10-million-password-list-top-100.txt:W2 -X POST -d "username=W1&password=W2"-H "Content-Type: application/x-www-form-urlencoded" -u http://10.10.167.0/customers/login -fc 200
